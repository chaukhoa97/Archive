{
	"files": [
		{
			"path": "src/App.js",
			"bookmarks": [
				{
					"line": 21,
					"column": 2,
					"label": "Side effect/Async code with Redux 1: Bỏ phần async ở trong `useEffect` (trong Component)"
				},
				{
					"line": 39,
					"column": 2,
					"label": "Router SearchParams"
				},
				{
					"line": 50,
					"column": 2,
					"label": "Router Location: { pathname:/products/2 , search: ?category=Clothes&sort=Asc }  }"
				},
				{
					"line": 54,
					"column": 4,
					"label": "React Context 2: Wrap = numberContext.Provider"
				},
				{
					"line": 68,
					"column": 6,
					"label": "Router Navigate: const navigate = useNavigate();"
				},
				{
					"line": 80,
					"column": 0,
					"label": "Router <Outlet>: Render element của <Route> con, giống props.children"
				},
				{
					"line": 94,
					"column": 2,
					"label": "Router <NavLink>"
				}
			]
		},
		{
			"path": "src/Storage/useReducer.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "reducer = (prevState, action-to-the-prevState) => newState"
				}
			]
		},
		{
			"path": "src/index.js",
			"bookmarks": [
				{
					"line": 15,
					"column": 41,
					"label": ""
				},
				{
					"line": 23,
					"column": 12,
					"label": "Router Index: Chưa chọn sp -> Hiện trước một cái gì đó"
				},
				{
					"line": 27,
					"column": 63,
					"label": "Router Params 1:  path = \":id\""
				},
				{
					"line": 7,
					"column": 1,
					"label": ""
				}
			]
		},
		{
			"path": "src/Redux/redux-component.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 56,
					"label": "Redux 4: `useSelector` để lấy value từ store state"
				},
				{
					"line": 11,
					"column": 1,
					"label": "Redux 5: `const dispatch = useDIspatch()`"
				},
				{
					"line": 14,
					"column": 4,
					"label": ""
				}
			]
		},
		{
			"path": "src/Storage/useContext.jsx",
			"bookmarks": [
				{
					"line": 7,
					"column": 2,
					"label": "React Context 3: const ctx = useContext"
				}
			]
		},
		{
			"path": "src/Storage/EventTarget.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 4,
					"label": "Handle big <form>"
				}
			]
		},
		{
			"path": "src/Redux/slice1.js",
			"bookmarks": [
				{
					"line": 3,
					"column": 0,
					"label": "Redux 1: `createSlice` -> export actions & reducer"
				},
				{
					"line": 8,
					"column": 6,
					"label": "state & action trong Redux là gì"
				},
				{
					"line": 15,
					"column": 6,
					"label": "Redux: See current state"
				}
			]
		},
		{
			"path": "src/Storage/useEffect.jsx",
			"bookmarks": [
				{
					"line": 10,
					"column": 2,
					"label": "useEffect cleanup"
				}
			]
		},
		{
			"path": "src/Form/SignUpConsult.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 2,
					"label": ""
				},
				{
					"line": 41,
					"column": 2,
					"label": "Form resetField"
				},
				{
					"line": 43,
					"column": 4,
					"label": ""
				},
				{
					"line": 46,
					"column": 8,
					"label": ""
				},
				{
					"line": 53,
					"column": 8,
					"label": ""
				},
				{
					"line": 58,
					"column": 33,
					"label": ""
				},
				{
					"line": 70,
					"column": 80,
					"label": "font"
				},
				{
					"line": 99,
					"column": 10,
					"label": "Form validate cho đúng format, trùng password...."
				},
				{
					"line": 122,
					"column": 8,
					"label": "Form Ant Select: defaultValue PHẢI ở <Controller>; placeholder ko dùng dc"
				},
				{
					"line": 143,
					"column": 12,
					"label": "Form Ant InputNumber:  Nên để `min` ở dưới <InputNumber> thay vì ở trên `rules` của <Controller>"
				},
				{
					"line": 155,
					"column": 10,
					"label": ""
				},
				{
					"line": 163,
					"column": 6,
					"label": ""
				},
				{
					"line": 169,
					"column": 8,
					"label": ""
				}
			]
		},
		{
			"path": "src/Redux/slice2-action-creator.js",
			"bookmarks": [
				{
					"line": 15,
					"column": 4,
					"label": "Side effect/Async code with Redux 2: Action Creator Thunk"
				}
			]
		},
		{
			"path": "src/Redux/store.js",
			"bookmarks": [
				{
					"line": 5,
					"column": 0,
					"label": "Redux 2: `configureStore` with multi slices, by Redux Toolkit"
				},
				{
					"line": 16,
					"column": 0,
					"label": ""
				}
			]
		},
		{
			"path": "src/Pages/ProductDetail.jsx",
			"bookmarks": [
				{
					"line": 4,
					"column": 2,
					"label": "Router Params 2: const { id } = useParams();"
				}
			]
		},
		{
			"path": "src/AntDesign/Menu.jsx",
			"bookmarks": [
				{
					"line": 8,
					"column": 46,
					"label": "Router: Active menu item"
				}
			]
		},
		{
			"path": "TypeScript/basic.ts",
			"bookmarks": [
				{
					"line": 17,
					"column": 4,
					"label": "interface vs type"
				},
				{
					"line": 31,
					"column": 0,
					"label": "Type assign meaning"
				}
			]
		},
		{
			"path": "src/Storage/number-context.ts",
			"bookmarks": [
				{
					"line": 4,
					"column": 30,
					"label": "React Context 1: React.createContext(modelState)"
				}
			]
		}
	]
}