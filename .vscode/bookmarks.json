{
	"files": [
		{
			"path": "src/App.js",
			"bookmarks": [
				{
					"line": 31,
					"column": 13,
					"label": ""
				},
				{
					"line": 41,
					"column": 2,
					"label": ""
				},
				{
					"line": 55,
					"column": 2,
					"label": ""
				},
				{
					"line": 59,
					"column": 2,
					"label": "P1: Side effect/Async code with Redux"
				},
				{
					"line": 76,
					"column": 4,
					"label": "React Context 2: <numberContext.Provider value = { {...} }>"
				}
			]
		},
		{
			"path": "src/components/NewExpense/ExpenseForm.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 1,
					"label": "Sử dụng useRef() vs useState(): 10 -> 29 -> 32 -> 59"
				},
				{
					"line": 57,
					"column": 10,
					"label": "useRef link tới DOM element"
				}
			]
		},
		{
			"path": "src/components/UI/Card.jsx",
			"bookmarks": [
				{
					"line": 4,
					"column": 2,
					"label": "props.children"
				}
			]
		},
		{
			"path": "src/components/Expenses/ExpenseDate.jsx",
			"bookmarks": [
				{
					"line": 10,
					"column": 4,
					"label": "Fragment"
				},
				{
					"line": 12,
					"column": 6,
					"label": "Portal: Có thể dùng logic của file này, nhưng render chỗ khác"
				}
			]
		},
		{
			"path": "src/Storage/ChartBar.jsx",
			"bookmarks": [
				{
					"line": 13,
					"column": 3,
					"label": "Import styles.module.css to component (from line 1)"
				},
				{
					"line": 16,
					"column": 10,
					"label": "Conditional className"
				},
				{
					"line": 23,
					"column": 12,
					"label": "Inline CSS style (camelCase)"
				}
			]
		},
		{
			"path": "src/Storage/useReducer.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "reducer = (prevState, action-to-the-prevState) => newState"
				},
				{
					"line": 32,
					"column": 2,
					"label": "Cách hoạt động useReducer"
				},
				{
					"line": 52,
					"column": 8,
					"label": "Passing onClick function"
				}
			]
		},
		{
			"path": "src/components/Expenses/ExpenseList.jsx",
			"bookmarks": [
				{
					"line": 16,
					"column": 5,
					"label": "Map a list of items -> components"
				}
			]
		},
		{
			"path": "src/Storage/Custom Hook/Forward.jsx",
			"bookmarks": [
				{
					"line": 3,
					"column": 2,
					"label": "custom Hook use"
				}
			]
		},
		{
			"path": "src/index.js",
			"bookmarks": [
				{
					"line": 8,
					"column": 2,
					"label": "Redux 6: Kẹp Provider quanh thằng nào dùng tới store"
				}
			]
		},
		{
			"path": "src/Redux/redux-component.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 56,
					"label": "Redux 4: useSelector((store) => store.stateObjectProperty)"
				},
				{
					"line": 12,
					"column": 4,
					"label": "Redux 5: dispatch( slice.actions.reducerFn(payload) )"
				}
			]
		},
		{
			"path": "src/Storage/useContext.jsx",
			"bookmarks": [
				{
					"line": 7,
					"column": 2,
					"label": "React Context 3: const ctx = useContext"
				}
			]
		},
		{
			"path": "src/Storage/Context/number-context.js",
			"bookmarks": [
				{
					"line": 3,
					"column": 0,
					"label": "React Context 1: React.createContext(modelState) "
				}
			]
		},
		{
			"path": "src/Redux/state-action.js",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "Redux 1: createSlice"
				},
				{
					"line": 4,
					"column": 2,
					"label": "state là gì"
				},
				{
					"line": 8,
					"column": 6,
					"label": "action là gì"
				},
				{
					"line": 20,
					"column": 0,
					"label": "Redux 2: export slice.actions"
				}
			]
		},
		{
			"path": "src/Redux/action-creator.js",
			"bookmarks": [
				{
					"line": 15,
					"column": 4,
					"label": "P2: Side effect/Async code with Redux"
				}
			]
		},
		{
			"path": "src/Redux/basic-redux-middleware.js",
			"bookmarks": [
				{
					"line": 13,
					"column": 0,
					"label": "Redux Route bt và khi có middleware"
				}
			]
		},
		{
			"path": "src/Storage/EventTarget.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 4,
					"label": "event.target"
				},
				{
					"line": 14,
					"column": 4,
					"label": "<input type = \"text\"   value = {someState}>"
				}
			]
		}
	]
}