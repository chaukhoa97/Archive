{
	"files": [
		{
			"path": "src/App.js",
			"bookmarks": [
				{
					"line": 21,
					"column": 2,
					"label": ""
				},
				{
					"line": 42,
					"column": 2,
					"label": ""
				},
				{
					"line": 55,
					"column": 2,
					"label": ""
				},
				{
					"line": 59,
					"column": 2,
					"label": "Side effect/Async code with Redux 1: Code ở trong Component ( = useEffect )"
				},
				{
					"line": 75,
					"column": 1,
					"label": "React Context 2: Wrap context quanh những component dùng tới"
				},
				{
					"line": 78,
					"column": 6,
					"label": "Router 2: Route & Link, Switch (Chỉ hiện 1 Route mà nó wrap), Redirect"
				},
				{
					"line": 126,
					"column": 0,
					"label": "https://overreacted.io/before-you-memo/"
				}
			]
		},
		{
			"path": "src/components/NewExpense/ExpenseForm.jsx",
			"bookmarks": [
				{
					"line": 5,
					"column": 2,
					"label": "useRef vs useState"
				},
				{
					"line": 55,
					"column": 10,
					"label": "Uncontrolled Component: useRef link tới DOM element vs Controlled component"
				}
			]
		},
		{
			"path": "src/components/UI/Card.jsx",
			"bookmarks": [
				{
					"line": 4,
					"column": 2,
					"label": "props.children"
				}
			]
		},
		{
			"path": "src/components/Expenses/ExpenseDate.jsx",
			"bookmarks": [
				{
					"line": 10,
					"column": 4,
					"label": "Fragment"
				},
				{
					"line": 12,
					"column": 6,
					"label": "Portal: Có thể dùng logic của file này, nhưng render chỗ khác"
				}
			]
		},
		{
			"path": "src/Storage/ChartBar.jsx",
			"bookmarks": [
				{
					"line": 13,
					"column": 3,
					"label": "Import styles.module.css to component (from line 1)"
				},
				{
					"line": 16,
					"column": 10,
					"label": "Conditional className"
				},
				{
					"line": 23,
					"column": 12,
					"label": "Conditional styling (inline)"
				}
			]
		},
		{
			"path": "src/Storage/useReducer.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "reducer = (prevState, action-to-the-prevState) => newState"
				},
				{
					"line": 51,
					"column": 8,
					"label": "Passing onClick function"
				}
			]
		},
		{
			"path": "src/Storage/Custom Hook/Forward.jsx",
			"bookmarks": [
				{
					"line": 3,
					"column": 2,
					"label": "custom Hook use"
				}
			]
		},
		{
			"path": "src/index.js",
			"bookmarks": [
				{
					"line": 5,
					"column": 0,
					"label": "FontAwesome Icon + Mapping Array to JSX"
				},
				{
					"line": 20,
					"column": 2,
					"label": "Redux 3: Kẹp Provider quanh thằng nào dùng tới store"
				},
				{
					"line": 21,
					"column": 4,
					"label": "Router 1: Kẹp <BrowserRouter> vào<App />"
				}
			]
		},
		{
			"path": "src/Redux/redux-component.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 56,
					"label": "Redux 4: useSelector((store) => store.stateObjectProperty)"
				},
				{
					"line": 11,
					"column": 1,
					"label": "Redux 5: dispatch(actions.reducerName( {action.payload} )"
				}
			]
		},
		{
			"path": "src/Storage/useContext.jsx",
			"bookmarks": [
				{
					"line": 7,
					"column": 2,
					"label": "React Context 3: const ctx = useContext"
				}
			]
		},
		{
			"path": "src/Storage/Context/number-context.js",
			"bookmarks": [
				{
					"line": 3,
					"column": 0,
					"label": "React Context 1: React.createContext(modelState) "
				}
			]
		},
		{
			"path": "src/Redux/state-action.js",
			"bookmarks": [
				{
					"line": 3,
					"column": 0,
					"label": "Redux 1: createSlice"
				},
				{
					"line": 8,
					"column": 1,
					"label": ""
				},
				{
					"line": 9,
					"column": 1,
					"label": ""
				},
				{
					"line": 15,
					"column": 19,
					"label": ""
				},
				{
					"line": 22,
					"column": 0,
					"label": "Redux 2: export slice.actions"
				}
			]
		},
		{
			"path": "src/Storage/EventTarget.jsx",
			"bookmarks": [
				{
					"line": 6,
					"column": 4,
					"label": "Handle big <form>"
				}
			]
		},
		{
			"path": "src/Redux/redux-store.js",
			"bookmarks": [
				{
					"line": 5,
					"column": 4,
					"label": "Redux 2: configureStore "
				}
			]
		},
		{
			"path": "src/Redux/slice1.js",
			"bookmarks": [
				{
					"line": 3,
					"column": 0,
					"label": "Redux 1: createSlice -> export actions & reducer"
				},
				{
					"line": 8,
					"column": 6,
					"label": "state & action trong Redux là gì"
				}
			]
		},
		{
			"path": "src/Storage/React-dot-memo.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 2,
					"label": "React.memo( MyComponent )"
				}
			]
		},
		{
			"path": "src/Storage/useEffect.jsx",
			"bookmarks": [
				{
					"line": 12,
					"column": 2,
					"label": "useEffect cleanup"
				}
			]
		},
		{
			"path": "src/Storage/Browser_API.js",
			"bookmarks": [
				{
					"line": 5,
					"column": 0,
					"label": ""
				}
			]
		},
		{
			"path": "src/Redux/basic-redux-middleware.js",
			"bookmarks": [
				{
					"line": 13,
					"column": 0,
					"label": ""
				}
			]
		},
		{
			"path": "src/Storage/useState.jsx",
			"bookmarks": [
				{
					"line": 2,
					"column": 0,
					"label": "useState vs props vs let/const"
				}
			]
		},
		{
			"path": "src/Storage/useCallback.jsx",
			"bookmarks": [
				{
					"line": 7,
					"column": 0,
					"label": "Router 3: Params(itemDetail), History(<Link>), Location(?sort=asc), RouteMatch(Max 23)"
				}
			]
		}
	]
}